name: Publicar no Dev.to

on:
  push:
    branches:
      - main
    # paths:
    #   - "_posts/*.md"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extrair conteúdo do post
        id: extract_post
        run: |
          # Debug: Log do commit anterior vindo do evento
          echo "DEBUG: github.event.before = ${{ github.event.before }}"

          # Pegar o commit anterior
          COMMIT_BEFORE=$(git rev-parse --verify ${{ github.event.before }} 2>/dev/null || echo "")

          # Debug: Log do commit detectado
          echo "DEBUG: COMMIT_BEFORE = $COMMIT_BEFORE"
          git show $COMMIT_BEFORE --oneline || echo "DEBUG: Commit não encontrado no histórico"

          if [ -z "$COMMIT_BEFORE" ]; then
              echo "Primeiro commit ou branch recém-criada. Pegando todos os posts novos..."
              FILE=$(git diff --name-only HEAD~1 | grep '^_posts/.*\.md' | head -n 1)
          else
              echo "DEBUG: Listando arquivos modificados desde $COMMIT_BEFORE..."
              git diff --name-only $COMMIT_BEFORE 94119e0a8eec2c4d07671b76c5dbf79f043d1154b

              FILE=$(git diff --name-only $COMMIT_BEFORE 94119e0a8eec2c4d07671b76c5dbf79f043d1154b | grep '^_posts/.*\.md' | head -n 1)
          fi

          # Debug: Mostrar qual arquivo foi detectado
          echo "DEBUG: Arquivo detectado para publicação: $FILE"

          if [ -z "$FILE" ]; then
              echo "Nenhum novo post encontrado."
              exit 0
          fi

          echo "FILE=$FILE" >> $GITHUB_ENV

      - name: Publicar no Dev.to
        if: env.FILE != ''
        run: |
          CONTENT=$(cat ${{ env.FILE }})
          JSON_DATA=$(jq -n --arg body "$CONTENT" '{ article: { title: "Meu Artigo", body_markdown: $body, published: true }}')
          curl -X POST "https://dev.to/api/articles" \
            -H "Content-Type: application/json" \
            -H "api-key: ${{ secrets.DEVTO_API_KEY }}" \
            -d "$JSON_DATA"
